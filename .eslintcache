[{"E:\\Programiranje\\site-mockups\\frost\\src\\index.js":"1","E:\\Programiranje\\site-mockups\\frost\\src\\App.jsx":"2","E:\\Programiranje\\site-mockups\\frost\\src\\components\\banner.jsx":"3","E:\\Programiranje\\site-mockups\\frost\\src\\components\\header.jsx":"4","E:\\Programiranje\\site-mockups\\frost\\src\\components\\services.jsx":"5","E:\\Programiranje\\site-mockups\\frost\\src\\resources\\data.js":"6","E:\\Programiranje\\site-mockups\\frost\\src\\components\\shareBanner.jsx":"7","E:\\Programiranje\\site-mockups\\frost\\src\\components\\projects.jsx":"8","E:\\Programiranje\\site-mockups\\frost\\src\\resources\\picture_library.js":"9","E:\\Programiranje\\site-mockups\\frost\\src\\components\\workTogetherBanner.jsx":"10","E:\\Programiranje\\site-mockups\\frost\\src\\components\\aboutUs.jsx":"11","E:\\Programiranje\\site-mockups\\frost\\src\\components\\ourTeam.jsx":"12","E:\\Programiranje\\site-mockups\\frost\\src\\components\\quotesBanner.jsx":"13","E:\\Programiranje\\site-mockups\\frost\\src\\components\\contactUs.jsx":"14","E:\\Programiranje\\site-mockups\\frost\\src\\components\\footer.jsx":"15","E:\\Programiranje\\site-mockups\\frost\\src\\components\\sidebarNav.jsx":"16","E:\\Programiranje\\site-mockups\\frost\\src\\resources\\formValidation.js":"17","E:\\Programiranje\\site-mockups\\frost\\src\\components\\contactForm.jsx":"18","E:\\Programiranje\\site-mockups\\frost\\src\\components\\inputField.jsx":"19","E:\\Programiranje\\site-mockups\\frost\\src\\components\\textAreaField.jsx":"20"},{"size":436,"mtime":1611597074659,"results":"21","hashOfConfig":"22"},{"size":2243,"mtime":1612560172718,"results":"23","hashOfConfig":"22"},{"size":952,"mtime":1612120426534,"results":"24","hashOfConfig":"22"},{"size":594,"mtime":1612297659632,"results":"25","hashOfConfig":"22"},{"size":850,"mtime":1613325715208,"results":"26","hashOfConfig":"22"},{"size":5602,"mtime":1612105950069,"results":"27","hashOfConfig":"22"},{"size":369,"mtime":1611941057583,"results":"28","hashOfConfig":"22"},{"size":2202,"mtime":1613325364261,"results":"29","hashOfConfig":"22"},{"size":3127,"mtime":1611772487646,"results":"30","hashOfConfig":"22"},{"size":437,"mtime":1613325142213,"results":"31","hashOfConfig":"22"},{"size":1524,"mtime":1612043787179,"results":"32","hashOfConfig":"22"},{"size":562,"mtime":1612286652611,"results":"33","hashOfConfig":"22"},{"size":1953,"mtime":1611998969514,"results":"34","hashOfConfig":"22"},{"size":2769,"mtime":1612718833396,"results":"35","hashOfConfig":"22"},{"size":210,"mtime":1612372441510,"results":"36","hashOfConfig":"22"},{"size":1133,"mtime":1612088695987,"results":"37","hashOfConfig":"22"},{"size":1265,"mtime":1612608715753,"results":"38","hashOfConfig":"22"},{"size":1721,"mtime":1612633048235,"results":"39","hashOfConfig":"22"},{"size":1269,"mtime":1612718902055,"results":"40","hashOfConfig":"22"},{"size":1234,"mtime":1612718952655,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"t9n7x9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Programiranje\\site-mockups\\frost\\src\\index.js",[],["88","89"],"E:\\Programiranje\\site-mockups\\frost\\src\\App.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\banner.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\header.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\services.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\resources\\data.js",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\shareBanner.jsx",["90"],"import shareBanner from \"../resources/shareBanner.jpg\";\r\n\r\nconst ShareBanner = () => {\r\n  return (\r\n    <div className=\"share-banner\">\r\n      <img src={shareBanner} alt=\"Click and Share\" />\r\n      <h2>\r\n        <a href=\"#\">\r\n          Click <span className=\"blue\">&</span> share the love\r\n        </a>\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShareBanner;\r\n","E:\\Programiranje\\site-mockups\\frost\\src\\components\\projects.jsx",["91"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nconst Projects = ({ thumbnails, categories, onActive }) => {\r\n  const activeCategory = categories.filter(category => category.active === \"true\")[0];\r\n\r\n  let smallBWPics = thumbnails;\r\n  smallBWPics.forEach(\r\n    item => (item.newUrl = `https://picsum.photos/id/${item.id}/300/200?grayscale`)\r\n  );\r\n\r\n  activeCategory.value === \"all\"\r\n    ? smallBWPics.forEach(picture => (picture.included = \"true\"))\r\n    : smallBWPics.forEach(picture =>\r\n        picture.category === activeCategory.value\r\n          ? (picture.included = \"true\")\r\n          : (picture.included = \"false\")\r\n      );\r\n\r\n  const [viewport, setviewport] = useState(\"normal\");\r\n\r\n  const handleResize = () => {\r\n    const viewportWidth = window.innerWidth;\r\n    viewportWidth <= 568 ? setviewport(\"small\") : setviewport(\"normal\");\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n  });\r\n\r\n  return (\r\n    <div id=\"projects\">\r\n      <h2>Our Awesome Projects</h2>\r\n      <h3>Great design comes with understanding customer needs</h3>\r\n      <ul>\r\n        {categories.map(category => (\r\n          <Fragment key={Math.random()}>\r\n            <li\r\n              key={category.value}\r\n              active={category.active}\r\n              className={`\"category-filter\" ${viewport === \"small\" && \"button-animate\"}`}\r\n              onClick={() => onActive(category.value)}>\r\n              {category.value}\r\n            </li>\r\n            {categories.findIndex(element => element === category) !==\r\n              categories.length - 1 && viewport !== \"small\" ? (\r\n              <li key={`${category.value}-separator`} className=\"separator\">\r\n                /\r\n              </li>\r\n            ) : null}\r\n          </Fragment>\r\n        ))}\r\n      </ul>\r\n      <div className=\"project-list\">\r\n        {smallBWPics\r\n          .filter(element => element.included === \"true\")\r\n          .map(photo => (\r\n            <img\r\n              key={photo.id}\r\n              id={photo.id}\r\n              src={photo.newUrl}\r\n              alt={`Photo author: ${photo.author}`}></img>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","E:\\Programiranje\\site-mockups\\frost\\src\\resources\\picture_library.js",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\workTogetherBanner.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\aboutUs.jsx",["92"],"import { aboutUs } from \"../resources/data.js\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport Team from \"./ourTeam\";\r\n\r\nconst AboutUs = () => {\r\n\r\n  const [viewport, setviewport ] = useState(\"large\");\r\n\r\n\r\n  const handleResize = () => {\r\n    const viewportWidth = window.innerWidth;\r\n    viewportWidth <= 1167 ? setviewport(\"small\") : setviewport(\"large\");\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n  });\r\n\r\n  return (\r\n    <div id=\"about-us\">\r\n      <h2>{aboutUs.title}</h2>\r\n      <h3>{aboutUs.subtitle}</h3>\r\n      <div id=\"description\">\r\n        <h2>{aboutUs.workplace.title}</h2>\r\n        <h3>\"{aboutUs.workplace.subtitle}\"</h3>\r\n        <p>{aboutUs.workplace.content}</p>\r\n        <p>\r\n          <a className=\"read-more\" href=\"#read-more\">\r\n            Read more\r\n          </a>\r\n        </p>\r\n      </div>\r\n      <img src={viewport === \"large\" ? aboutUs.workplace.pictureLarge : aboutUs.workplace.pictureSmall} alt=\"Workplace picture\"></img>\r\n      <div id=\"what-we-do\">\r\n        <div id=\"ourWork\">\r\n          <h2>{aboutUs.ourWork.title}</h2>\r\n          <p>{aboutUs.ourWork.content}</p>\r\n        </div>\r\n        <div id=\"ourProcess\">\r\n          <h2>{aboutUs.ourProcess.title}</h2>\r\n          <p>{aboutUs.ourProcess.content}</p>\r\n        </div>\r\n        <div id=\"ourSkills\">\r\n          <h2>{aboutUs.ourSkills.title}</h2>\r\n          <p>{aboutUs.ourSkills.content}</p>\r\n        </div>\r\n      </div>\r\n      <Team />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","E:\\Programiranje\\site-mockups\\frost\\src\\components\\ourTeam.jsx",["93"],"import { team } from \"../resources/data.js\";\r\n\r\nconst Team = () => {\r\n  return (\r\n    <div key=\"team\" id=\"team\">\r\n      {team.map(worker => (\r\n        <div id={worker.id} key={worker.id}>\r\n          <img src={worker.photo} alt={`Employee photo: ${worker.name}`} key={`${worker.id}-photo`}></img>\r\n          <h2 key={`${worker.id}-name`}>{worker.name}</h2>\r\n          <h3 key={`${worker.id}-role`}>{worker.role}</h3>\r\n          <p key={`${worker.id}-description`}>{worker.description}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","E:\\Programiranje\\site-mockups\\frost\\src\\components\\quotesBanner.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\contactUs.jsx",["94"],"import { BsCardHeading as EmailIcon} from \"react-icons/bs\";\r\nimport { TiLocationOutline as LocationIcon } from \"react-icons/ti\";\r\nimport { AiOutlinePhone as PhoneIcon } from \"react-icons/ai\";\r\nimport { contactUs } from \"../resources/data.js\";\r\nimport { useState } from \"react\";\r\nimport Joi from \"joi\";\r\nimport schemaValidate from \"../resources/formValidation.js\";\r\nimport ContactForm from \"./contactForm.jsx\";\r\n\r\nconst ContactUs = ({ handleSubmit }) => {\r\n  const [message, setMessage] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n    validated: false,\r\n  });\r\n\r\n  const formInputHandle = (value, category) => {\r\n    setMessage(prevState => ({\r\n      ...prevState,\r\n      [category]: value,\r\n      validated: validateInput({ ...prevState, [category]: value }),\r\n    }));\r\n  };\r\n\r\n  const validateInput = message => {\r\n    const validation = schemaValidate.validate(\r\n      {\r\n        name: message.name,\r\n        email: message.email,\r\n        message: message.message,\r\n      },\r\n      { abortEarly: false }\r\n    );\r\n    return validation.error ? false : true;\r\n  };\r\n\r\n  const singleValidate = (parameter, value) => {\r\n    const validation = schemaValidate.validate(\r\n      { [parameter]: value },\r\n      { abortEarly: false }\r\n    );\r\n    const result = validation.error.details.filter(\r\n      item => item.context.key === parameter\r\n    );\r\n    return result.length ? result[0].message : null;\r\n  };\r\n\r\n  const onSubmit = message => {\r\n    try {\r\n      handleSubmit(message);\r\n      alert(\"Your message was sent. We'll get back to you shortly!\");\r\n    } catch (error) {\r\n      alert(\r\n        \"Ooops, something went wrong while trying to send your message. Please try again later or send us an email!\"\r\n      );\r\n      console.error(error);\r\n    }\r\n    let keys = Object.keys(message);\r\n    let newState = message;\r\n    keys.forEach(key => (newState[key] = \"\"));\r\n    setMessage({ ...newState });\r\n  };\r\n\r\n  return (\r\n    <div id=\"contact-us\">\r\n      <h2>{contactUs.title}</h2>\r\n      <h3>{contactUs.subtitle}</h3>\r\n      <p>{contactUs.content}</p>\r\n      <div id=\"contact-information\">\r\n        <p>\r\n          <LocationIcon className=\"about-icon location\" />\r\n          {contactUs.address}\r\n        </p>\r\n        <p>\r\n          <PhoneIcon className=\"about-icon phone\" />\r\n          {contactUs.phone}\r\n        </p>\r\n        <p>\r\n          <EmailIcon className=\"about-icon mail\" /> {contactUs.email}\r\n        </p>\r\n      </div>\r\n      <ContactForm\r\n        message={message}\r\n        onSubmit={message => onSubmit(message)}\r\n        onSingleValidate={(parameter, value) => singleValidate(parameter, value)}\r\n        onInputHandle={(input, category) => formInputHandle(input, category)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","E:\\Programiranje\\site-mockups\\frost\\src\\components\\footer.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\sidebarNav.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\resources\\formValidation.js",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\contactForm.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\inputField.jsx",[],"E:\\Programiranje\\site-mockups\\frost\\src\\components\\textAreaField.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":9,"nodeType":"101","endLine":8,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":56,"column":13,"nodeType":"101","endLine":60,"endColumn":53},{"ruleId":"102","severity":1,"message":"103","line":32,"column":7,"nodeType":"101","endLine":32,"endColumn":129},{"ruleId":"102","severity":1,"message":"103","line":8,"column":11,"nodeType":"101","endLine":8,"endColumn":101},{"ruleId":"104","severity":1,"message":"105","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":11},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'Joi' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]